package components

import "fmt"

// Import the Header component
//go:generate templ generate

// Card component
templ Card(props CardProps) {
	<div
		class={ fmt.Sprintf("card %s %s", templ.SafeClass(props.ClassName),
    templ.SafeClass(Ternary(props.HasAccent, "card-accent" , "" )), ) }
	>
		if props.Title != "" || props.Subtitle != "" {
			<div class={ fmt.Sprintf("card-header %s", templ.SafeClass(props.HeaderClass)) }>
				if props.Title != "" {
					<h2 class="title">{ props.Title }</h2>
				}
				if props.Subtitle != "" {
					<h3 class="subtitle">{ props.Subtitle }</h3>
				}
			</div>
		}
		<div class={ fmt.Sprintf("card-body %s", templ.SafeClass(props.BodyClass)) }>
			{ children... }
		</div>
	</div>
}

templ PageLayoutWithPath(title string, currentPath string) {
	<!DOCTYPE html>
	<html lang="en" hx-boost="true">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<meta name="description" content="Sprint Gauge - A collaborative tool for agile teams to estimate tasks together in real-time. Create a room, invite your team, and estimate tasks efficiently."/>
			<meta name="keywords" content="agile estimation, sprint planning, story points, task sizing, scrum, team estimation, planning poker alternative"/>
			<meta name="author" content="Sprint Gauge"/>
			<meta property="og:title" content="Sprint Gauge - Collaborative Task Estimation Tool"/>
			<meta property="og:description" content="A collaborative tool for agile teams to estimate tasks together in real-time."/>
			<meta property="og:type" content="website"/>
			<meta property="og:image" content="/assets/img/favicon.svg"/>
			<title>{ title } - Sprint Gauge</title>
			<link rel="icon" type="image/svg+xml" href="/assets/img/favicon.svg"/>
			<link href="/assets/css/output.css" rel="stylesheet"/>
			<link rel="preconnect" href="https://fonts.googleapis.com"/>
			<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/>
			<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200&icon_names=menu,open_in_new,swap,sync"/>
			<script src="/assets/js/htmx.min.js"></script>
			<script src="/assets/js/htmx.ws.js"></script>
			<script src="/assets/js/mobile-menu.js"></script>
			<script src="/assets/js/components/line-clamp.js"></script>
			<script src="/assets/js/components/modal.js"></script>
			<script src="/assets/js/components/toast.js"></script>
			<script src="/assets/js/components/room-id-input.js"></script>
			<script src="/assets/js/components/flashing-div.js" type="module"></script>
		</head>
		<body>
			@HeaderWithActive(currentPath)
			<div class="flex justify-center items-center p-2 min-h-screen">
				<div class="w-full mx-auto max-w-2xl">
					{ children... }
				</div>
			</div>
			<ui-toast-container></ui-toast-container>
		</body>
		@footer()
	</html>
}

templ footer() {
	<footer class="py-4 px-8 my-8 max-w-fit mx-auto border-t border-border-color">
		<div class="grid grid-cols-3 divide-x divide-border-color max-w-fit mx-auto text-center">
			<!-- github link with icon -->
			<a href="https://github.com/markojerkic/sprint-planing" target="_blank" class="text-text-light hover:text-primary-light flex items-center justify-center gap-1 transition-colors px-4">
				<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-github">
					<path d="M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4"></path>
					<path d="M9 18c-4.51 2-5-2-7-2"></path>
				</svg>
				GitHub
			</a>
			<!-- privacy link -->
			<a href="/privacy" class="text-text-light hover:text-primary-light flex items-center justify-center transition-colors px-4">
				Privacy
			</a>
			<!-- terms link -->
			<a href="/terms-of-service" class="text-text-light hover:text-primary-light flex items-center justify-center transition-colors px-4">
				Terms
			</a>
		</div>
	</footer>
}

// Alert component
templ Alert(message string, alertType AlertType) {
	<div class={ fmt.Sprintf("alert alert-%s", string(alertType)) }>
		{ message }
	</div>
}
