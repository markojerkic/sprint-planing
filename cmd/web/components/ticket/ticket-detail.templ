package ticket

import "fmt"

type TicketDetailProps struct {
	ID              uint
	RoomID          uint
	Name            string
	Description     string
	JiraKey         *string
	HasEstimate     bool
	IsClosed        bool
	IsHidden        bool
	UserEstimate    string
	AnsweredBy      string
	AverageEstimate string
	MedianEstimate  string
	StdEstimate     string
	EstimatedBy     string
}

templ TicketDetail(props TicketDetailProps, isRoomOwner bool) {
	<div
		class="ticket-detail transition-colors"
		data-ticket-id={ fmt.Sprintf("%d", props.ID) }
		data-is-owner={ fmt.Sprintf("%t", isRoomOwner) }
	>
		<h3 class="text-2xl font-extrabold py-4">
			if props.JiraKey != nil {
				<a
					href={ templ.SafeURL(fmt.Sprintf("/jira/%s", *props.JiraKey)) }
					target="_blank"
					class="ml-2 underline underline-offset-4 hover:text-blue-500"
				>
					{ props.Name }
					<span class="material-symbols-outlined text-sm align-middle">open_in_new</span>
				</a>
			} else {
				{ props.Name }
			}
		</h3>
		<ui-line-clamp>
			{ props.Description }
		</ui-line-clamp>
		<p></p>
		<div data-estimation-ticket-id={ fmt.Sprintf("%d", props.ID) }>
			if props.HasEstimate {
				{ props.UserEstimate }
			} else if !props.IsClosed {
				@estimationForm(props.ID, props.RoomID)
			}
		</div>
		if props.HasEstimate || props.IsClosed {
			@EstimationDetail(props.ID, props.JiraKey, props.AverageEstimate, props.MedianEstimate, props.StdEstimate, props.EstimatedBy)
		}
		<span data-answered-by={ fmt.Sprintf("%d", props.ID) }>Estimated by: { props.EstimatedBy }</span>
		if isRoomOwner && !props.IsClosed {
			<button
				class="btn btn-danger mt-4"
				name="id"
				value={ fmt.Sprintf("%d", props.ID) }
				hx-post="/ticket/close"
				hx-swap="outerHTML"
				hx-target={ fmt.Sprintf("div[data-ticket-id='%d']", props.ID) }
			>Close</button>
		}
		if isRoomOwner {
			@HideToggle(props.ID, props.IsHidden)
		}
	</div>
}

templ HideToggle(ticketID uint, isHidden bool) {
	if isHidden {
		<button
			hx-post="/ticket/hide"
			hx-swap="outerHTML"
			name="id"
			value={ fmt.Sprintf("%d", ticketID) }
			class="btn btn-success mt-4"
		>
			Reveal
		</button>
	} else {
		<button
			hx-post="/ticket/hide"
			hx-swap="outerHTML"
			name="id"
			value={ fmt.Sprintf("%d", ticketID) }
			class="btn btn-warn mt-4"
		>
			Hide
		</button>
	}
}

templ CreatedTicketUpdate(props TicketDetailProps, flash bool) {
	<div hx-swap-oob="afterbegin:#ticket-list">
		<ui-flashing-div
			if flash {
				flash
			}
			data-ticket-id={ fmt.Sprintf("%d", props.ID) }
			data-is-owner={ fmt.Sprintf("%t", false) }
		>
			@TicketDetail(props, false)
		</ui-flashing-div>
	</div>
}
